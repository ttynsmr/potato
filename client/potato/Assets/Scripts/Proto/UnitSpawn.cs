// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: generated/unit/unit_spawn.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Torikime.Unit.Spawn {

  /// <summary>Holder for reflection information generated from generated/unit/unit_spawn.proto</summary>
  public static partial class UnitSpawnReflection {

    #region Descriptor
    /// <summary>File descriptor for generated/unit/unit_spawn.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UnitSpawnReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9nZW5lcmF0ZWQvdW5pdC91bml0X3NwYXduLnByb3RvEhN0b3Jpa2ltZS51",
            "bml0LnNwYXduGg1tZXNzYWdlLnByb3RvIuYBCgxOb3RpZmljYXRpb24SEgoK",
            "c2Vzc2lvbl9pZBgBIAEoBRIPCgd1bml0X2lkGAIgASgEEiMKCHBvc2l0aW9u",
            "GAMgASgLMhEudG9yaWtpbWUuVmVjdG9yMxIRCglkaXJlY3Rpb24YBCABKAIS",
            "LgoNaW5kaXZpZHVhbGl0eRgFIAEoCzIXLnRvcmlraW1lLkluZGl2aWR1YWxp",
            "dHkSJwoFY2F1c2UYBiABKA4yGC50b3Jpa2ltZS5Vbml0U3Bhd25DYXVzZRIg",
            "CgZhdmF0YXIYByABKAsyEC50b3Jpa2ltZS5BdmF0YXIiZgoSTm90aWZpY2F0",
            "aW9uUGFyY2VsEjcKDG5vdGlmaWNhdGlvbhgBIAEoCzIhLnRvcmlraW1lLnVu",
            "aXQuc3Bhd24uTm90aWZpY2F0aW9uEhcKD25vdGlmaWNhdGlvbl9pZBgCIAEo",
            "DWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Torikime.MessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Torikime.Unit.Spawn.Notification), global::Torikime.Unit.Spawn.Notification.Parser, new[]{ "SessionId", "UnitId", "Position", "Direction", "Individuality", "Cause", "Avatar" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Torikime.Unit.Spawn.NotificationParcel), global::Torikime.Unit.Spawn.NotificationParcel.Parser, new[]{ "Notification", "NotificationId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Torikime.Unit.Spawn.UnitSpawnReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      sessionId_ = other.sessionId_;
      unitId_ = other.unitId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      direction_ = other.direction_;
      individuality_ = other.individuality_ != null ? other.individuality_.Clone() : null;
      cause_ = other.cause_;
      avatar_ = other.avatar_ != null ? other.avatar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "unit_id" field.</summary>
    public const int UnitIdFieldNumber = 2;
    private ulong unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Torikime.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Torikime.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private float direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "individuality" field.</summary>
    public const int IndividualityFieldNumber = 5;
    private global::Torikime.Individuality individuality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Torikime.Individuality Individuality {
      get { return individuality_; }
      set {
        individuality_ = value;
      }
    }

    /// <summary>Field number for the "cause" field.</summary>
    public const int CauseFieldNumber = 6;
    private global::Torikime.UnitSpawnCause cause_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Torikime.UnitSpawnCause Cause {
      get { return cause_; }
      set {
        cause_ = value;
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 7;
    private global::Torikime.Avatar avatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Torikime.Avatar Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (UnitId != other.UnitId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Direction, other.Direction)) return false;
      if (!object.Equals(Individuality, other.Individuality)) return false;
      if (Cause != other.Cause) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (UnitId != 0UL) hash ^= UnitId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Direction != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Direction);
      if (individuality_ != null) hash ^= Individuality.GetHashCode();
      if (Cause != 0) hash ^= Cause.GetHashCode();
      if (avatar_ != null) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SessionId);
      }
      if (UnitId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UnitId);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (Direction != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Direction);
      }
      if (individuality_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Individuality);
      }
      if (Cause != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Cause);
      }
      if (avatar_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (UnitId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnitId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Direction != 0F) {
        size += 1 + 4;
      }
      if (individuality_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Individuality);
      }
      if (Cause != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cause);
      }
      if (avatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.UnitId != 0UL) {
        UnitId = other.UnitId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Torikime.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Direction != 0F) {
        Direction = other.Direction;
      }
      if (other.individuality_ != null) {
        if (individuality_ == null) {
          individuality_ = new global::Torikime.Individuality();
        }
        Individuality.MergeFrom(other.Individuality);
      }
      if (other.Cause != 0) {
        Cause = other.Cause;
      }
      if (other.avatar_ != null) {
        if (avatar_ == null) {
          avatar_ = new global::Torikime.Avatar();
        }
        Avatar.MergeFrom(other.Avatar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SessionId = input.ReadInt32();
            break;
          }
          case 16: {
            UnitId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (position_ == null) {
              position_ = new global::Torikime.Vector3();
            }
            input.ReadMessage(position_);
            break;
          }
          case 37: {
            Direction = input.ReadFloat();
            break;
          }
          case 42: {
            if (individuality_ == null) {
              individuality_ = new global::Torikime.Individuality();
            }
            input.ReadMessage(individuality_);
            break;
          }
          case 48: {
            cause_ = (global::Torikime.UnitSpawnCause) input.ReadEnum();
            break;
          }
          case 58: {
            if (avatar_ == null) {
              avatar_ = new global::Torikime.Avatar();
            }
            input.ReadMessage(avatar_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationParcel : pb::IMessage<NotificationParcel> {
    private static readonly pb::MessageParser<NotificationParcel> _parser = new pb::MessageParser<NotificationParcel>(() => new NotificationParcel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationParcel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Torikime.Unit.Spawn.UnitSpawnReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationParcel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationParcel(NotificationParcel other) : this() {
      notification_ = other.notification_ != null ? other.notification_.Clone() : null;
      notificationId_ = other.notificationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationParcel Clone() {
      return new NotificationParcel(this);
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 1;
    private global::Torikime.Unit.Spawn.Notification notification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Torikime.Unit.Spawn.Notification Notification {
      get { return notification_; }
      set {
        notification_ = value;
      }
    }

    /// <summary>Field number for the "notification_id" field.</summary>
    public const int NotificationIdFieldNumber = 2;
    private uint notificationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NotificationId {
      get { return notificationId_; }
      set {
        notificationId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationParcel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationParcel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Notification, other.Notification)) return false;
      if (NotificationId != other.NotificationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (notification_ != null) hash ^= Notification.GetHashCode();
      if (NotificationId != 0) hash ^= NotificationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (notification_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Notification);
      }
      if (NotificationId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NotificationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (notification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notification);
      }
      if (NotificationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotificationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationParcel other) {
      if (other == null) {
        return;
      }
      if (other.notification_ != null) {
        if (notification_ == null) {
          notification_ = new global::Torikime.Unit.Spawn.Notification();
        }
        Notification.MergeFrom(other.Notification);
      }
      if (other.NotificationId != 0) {
        NotificationId = other.NotificationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (notification_ == null) {
              notification_ = new global::Torikime.Unit.Spawn.Notification();
            }
            input.ReadMessage(notification_);
            break;
          }
          case 16: {
            NotificationId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
