name: ðŸ“ºGame CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: âœ¨Build my project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: client/potato/Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: âš—Generate RPC
        run: |
          pushd server/action-server3
          pushd torikime
          python -m pip install --upgrade pip
          pip install pipenv --upgrade-strategy=only-if-needed
          pipenv install
          python torikime.py --help
          python torikime.py -o ../proto/generated -s ../../client/potato/Assets/Scripts/Rpc/Generated" -i ../rpc
          popd
          ./generate_csharp_proto.sh
          popd

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          projectPath: client/potato

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows64
          projectPath: client/potato

      # # Output
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: Build
      #     path: client/potato/build
