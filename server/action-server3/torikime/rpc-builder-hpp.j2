// Generated by the torikime.  DO NOT EDIT!

#pragma once

#include <memory>

namespace potato {
	namespace net {
		class session;
	}
}

{% for contract in contracts %}
{%- for name in contract.names %}
namespace {{ namespace }}::{{ contract.name }}::{{ name }} { class Rpc; }
{%- endfor %}
{%- endfor %}

class RpcBuilder
{
public:
	RpcBuilder();
	~RpcBuilder();

	void build(std::shared_ptr<potato::net::session> session);

{%- for contract in contracts %}
	struct
	{
{%- for name in contract.names %}
		std::shared_ptr<{{ namespace }}::{{ contract.name }}::{{ name }}::Rpc> {{ name | lower_camelize }};
{%- endfor %}
	} {{ contract.name }};
{% endfor %}
};

// Generated by the torikime.  DO NOT EDIT!
